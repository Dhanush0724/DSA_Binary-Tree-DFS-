# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def longestZigZag(self, root: Optional[TreeNode]) -> int:

        self.longest = 0

        def dfs(node,length,came_from):

            self.longest = max(self.longest,length)

            if node.left:
                if came_from == 'right':
                    dfs(node.left,length+1,'left')
                else :
                    dfs(node.left,1,'left')
            if node.right :
                if came_from == 'left':
                    dfs(node.right,length+1,'right')
                else :
                    dfs(node.right,1,'right')
            
        
        dfs(root,0,'')
        return self.longest

        
